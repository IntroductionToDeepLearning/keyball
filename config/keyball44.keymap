#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        apo_quote_tap: apo_quote_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "APO_QUOTE_TAP";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp DOUBLE_QUOTES>;
        };

        colon_semi_tap: colon_semi_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_SEMI_TAP";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
        };

        minus_plus_tap: minus_plus_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUS_PLUS_TAP";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PLUS>;
        };

        x_equal_tap: x_equal_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "X_EQUAL_TAP";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp EQUAL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escl {
            bindings = <&none>;
            key-positions = <16 15>;
        };

        escr {
            bindings = <&none>;
            key-positions = <19 20>;
        };

        numlay {
            bindings = <&to 2>;
            key-positions = <29 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp TAB         &kp Q     &kp W         &kp E        &kp R      &kp T                 &kp Y            &kp U  &kp I      &kp O    &kp P            &minus_plus_tap
&kp ESCAPE      &kp A     &kp S         &kp D        &kp F      &kp G                 &kp H            &kp J  &kp K      &kp L    &colon_semi_tap  &apo_quote_tap
&kp LEFT_SHIFT  &kp Z     &x_equal_tap  &kp C        &kp V      &kp B                 &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH        &kp UNDER
&kp LCTRL       &kp LALT  &lt 0 ESCAPE  &lt 1 SPACE  &lt 2 TAB             &kp ENTER  &lt 0 BACKSPACE                                              &kp DELETE
            >;
        };

        symbol-nav {
            bindings = <
&kp TAB  &kp EXCL  &kp HOME   &kp UP     &kp END    &kp DOLLAR               &kp ASTERISK   &kp LBKT              &kp RBKT               &kp GRAVE         &kp D         &kp S
&trans   &kp AT    &kp LEFT   &kp DOWN   &kp RIGHT  &kp HASH                 &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPS          &kp COLON     &kp DOUBLE_QUOTES
&trans   &kp DEL   &kp EQUAL  &kp PG_UP  &kp PG_DN  &kp PERCENT              &kp LESS_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN  &kp QUESTION  &kp UNDER
&trans   &trans    &trans     &trans     &trans                      &trans  &trans                                                                                      &kp S
            >;
        };

        numerical {
            bindings = <
&trans    &trans  &kp N7  &kp N8  &kp N9  &kp LS(STAR)               &kp N8     &trans  &trans  &trans  &trans  &trans
&trans    &trans  &kp N4  &kp N5  &kp N6  &kp LS(PLUS)               &kp EQUAL  &trans  &trans  &trans  &trans  &trans
&trans    &kp N0  &kp N1  &kp N2  &kp N3  &kp LS(TILDE)              &kp GRAVE  &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp N0  &trans  &trans  &trans                     &trans  &trans                                     &trans
            >;
        };

        control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
